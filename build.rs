use std::path::Path;

use cbindgen::{
  Config,
  Error as BindError,
  Language,
};


fn generate_header(crate_path: &'static str) -> Result<(), BindError> {
  let output_file = Path::new(crate_path).join("tinyalloc.h");

  let config = Config {
    language: Language::C,
    include_guard: Some("TINYALLOC_H".to_string()),
    autogen_warning: Some(
      "/*\n * This file is autogenerated by cbindgen.\n * Do not modify this file directly.\n */"
        .to_string(),
    ),
    usize_is_size_t: true,
    ..Default::default()
  };

  cbindgen::generate_with_config(crate_path, config)?
    .write_to_file(output_file);

  Ok(())
}

fn main() {
  let crate_path = env!("CARGO_MANIFEST_DIR");

  generate_header(crate_path).expect("Unable to generate bindings");

  println!("cargo:rerun-if-changed=build.rs");
  println!("cargo:rerun-if-changed=src/ffi.rs");
}
